package byit.utils;

import java.io.IOException;
import java.io.InputStreamReader;
import java.io.LineNumberReader;
import java.lang.reflect.Field;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import byit.osdp.base.entity.AuthUserEntity;

/**
 * 
	 * 项目名称：hfportal   
	 * 类名称：Tools   
	 * 类描述：  常用工具类
	 * 创建人：lisw
	 * 创建时间：2017年5月19日 下午4:31:20   
	 * 修改人：
	 * 修改时间：2017年5月19日 下午4:31:20   
	 * 修改备注：   
	 * @version
 */
public class Tools {
	
	/**
	 * 
		 *@author lisw
		 *@Description: 检测字符串是否为空(null,"","null")
		 *@creatTime:2015-12-14 下午2:10:06 
		 *@param s:待检测的字符串
		 *@return boolean。不为空则返回true，为空返回false
		 *@modifier:
		 *@modifTime:
		 *@throws
	 */
	public static boolean isNotEmpty(String s) {
		return s!=null && s.trim().length()>0;
	}

	/**
	 * 
		 *@author lisw
		 *@Description: 将Map<String,String>转化为User对象
		 *@creatTime:2017年5月21日 下午7:13:58 
		 *@return:@param map
		 *@return:@return AuthUserEntity
		 *@modifier:
		 *@modifTime:
		 *@throws
	 */
	public static AuthUserEntity convertMapToUser(Map<String,String> map){
		AuthUserEntity user=new AuthUserEntity();
		Field[] field =user.getClass().getDeclaredFields();
		try {
            for (int j = 0; j < field.length; j++) { // 遍历所有属性
                String name = field[j].getName(); // 获取属性的名字
                name = name.substring(0, 1).toUpperCase() + name.substring(1); // 将属性的首字符大写，方便构造get，set方法
                String type = field[j].getGenericType().toString(); // 获取属性的类型
                if (type.equals("class java.lang.String")) { // 如果type是类类型，则前面包含"class "，后面跟类名
                    Method m = user.getClass().getMethod("get" + name);
                    String value = (String) m.invoke(user); // 调用getter方法获取属性值
                    if (value == null) {
                        m = user.getClass().getMethod("set"+name,String.class);
                        String nameValue=(String)getMapValue(field[j].getName(),map);
                        m.invoke(user, nameValue);
                    }
                }
                if (type.equals("class java.lang.Integer")) {
                    Method m = user.getClass().getMethod("get" + name);
                    Integer value = (Integer) m.invoke(user);
                    if (value == null) {
                        m = user.getClass().getMethod("set"+name,Integer.class);
                        Integer nameValue=(Integer)getMapValue(field[j].getName(),map);
                        m.invoke(user, nameValue);
                    }
                }
                if (type.equals("class java.lang.Boolean")) {
                    Method m = user.getClass().getMethod("get" + name);
                    Boolean value = (Boolean) m.invoke(user);
                    if (value == null) {
                        m = user.getClass().getMethod("set"+name,Boolean.class);
                        Boolean nameValue=(Boolean)getMapValue(field[j].getName(),map);
                        m.invoke(user, nameValue);
                    }
                }
                if (type.equals("class java.util.Date")) {
                    Method m = user.getClass().getMethod("get" + name);
                    Date value = (Date) m.invoke(user);
                    if (value == null) {
                        m = user.getClass().getMethod("set"+name,Date.class);
                        
                        String nameValue=(String)getMapValue(field[j].getName(),map);
                        
                        m.invoke(user, str2Date(nameValue));
                    }
                }
                // 如果有需要,可以仿照上面继续进行扩充,再增加对其它类型的判断
            }
        } catch (NoSuchMethodException e) {
            e.printStackTrace();
        } catch (SecurityException e) {
            e.printStackTrace();
        } catch (IllegalAccessException e) {
            e.printStackTrace();
        } catch (IllegalArgumentException e) {
            e.printStackTrace();
        } catch (InvocationTargetException e) {
            e.printStackTrace();
        }
		/*for (int i = 0; i < field.length; i++) {
			String userObjName= field[i].getName(); 
			for (String key : map.keySet()) {
				if(userObjName.equals(key)){
					
				}
			}
			
		}*/
		
		
		return user;
		
	}
	
	/**
	 * 
		 *@author lisw
		 *@Description: 获取map的value
		 *@creatTime:2017年5月21日 下午8:28:39 
		 *@return:@param name
		 *@return:@param map
		 *@return:@return Object
		 *@modifier:
		 *@modifTime:
		 *@throws
	 */
	public static Object getMapValue(String name,Map<String,String> map){
		Object obj=null;
		for (String key : map.keySet()) {
        	if(name.equals(key)){
        		obj=map.get(key)==null?"":map.get(key);
        	}
        }
		return obj;
	}
	
	/**
	 * 按照yyyy-MM-dd HH:mm:ss的格式，字符串转日期
	 * 
	 * @param date
	 * @return
	 */
	public static Date str2Date(String date) {
		if (isNotEmpty(date)) {
			SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
			try {
				return sdf.parse(date);
			} catch (ParseException e) {
				e.printStackTrace();
			}
			return new Date();
		} else {
			return null;
		}
	}
	
	/**
	 * 
		 *@author lisw
		 *@Description: 获取访问者（客户端的ip地址）
		 *@creatTime:2017年5月22日 下午6:42:37 
		 *@return:@param request
		 *@return:@return String
		 *@modifier:
		 *@modifTime:
		 *@throws
	 */
	public static String getIpAddr(HttpServletRequest request) {
      //获取真实的ip地址，就算是通过代理也能获取ip地址。
		//如果浏览器数据localhost，返回的ip地址是0:0:0:0:0:..:1这类地址
		String ip = request.getHeader("x-forwarded-for");
		if (ip == null || ip.length() == 0 || "unknown".equalsIgnoreCase(ip)) {
			ip = request.getHeader("Proxy-Client-IP");
		}
		if (ip == null || ip.length() == 0 || "unknown".equalsIgnoreCase(ip)) {
			ip = request.getHeader("WL-Proxy-Client-IP");
		}
		if (ip == null || ip.length() == 0 || "unknown".equalsIgnoreCase(ip)) {
			ip = request.getHeader("HTTP_CLIENT_IP");
		}
		if (ip == null || ip.length() == 0 || "unknown".equalsIgnoreCase(ip)) {
			ip = request.getHeader("HTTP_X_FORWARDED_FOR");
		}
		if (ip == null || ip.length() == 0 || "unknown".equalsIgnoreCase(ip)) {
			ip = request.getRemoteAddr();
		}
		return ip;
    }
	
	
	/**
	 * 
		 *@author lisw
		 *@Description: 格式化当前时间，格式化后的时间为20150807105556
		 *@creatTime:2016-7-27 下午2:09:26 
		 *@parameter：@return String
		 *@modifier:
		 *@modifTime:
		 *@throws
	 */
	public static String getCurrFormatTime() {
		SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMddHHmmss");
		return sdf.format(new Date());
	}
	
	public static void main(String[] args) {
	}
}
