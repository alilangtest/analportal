package byit.osdp.portal.sso.controller;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.HashMap;
import java.util.Map;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;

import byit.osdp.portal.sso.Contants;
import byit.osdp.portal.sso.cookies.CookiesUtil;

/**
 * 调用此servlet时，读取当前全部cookie并将结果拼接成js赋值语句返回，返回类型为application/javascript
 */
@Controller
@RequestMapping(value = "cookies")
public class CookiesController extends HttpServlet {
	private static final long serialVersionUID = 1L;

	/**
	 * 
		 *@author lisw
		 *@Description: 读取浏览器的cookies
		 *@creatTime:2017年5月30日 下午6:57:23 
		 *@return:@param request
		 *@return:@param response
		 *@return:@return
		 *@return:@throws IOException Map<String,String>
		 *@modifier:
		 *@modifTime:
		 *@throws
	 */
	@RequestMapping(value="read")
	public void readCookies(HttpServletRequest request,
			HttpServletResponse response) throws IOException{
		Map<String,String> map=new HashMap<String, String>();
		Cookie[] cookies = request.getCookies();
		StringBuilder builder = new StringBuilder();
		
		// 一定要正确设置响应类型，否则可能导致IE不解析js而直接进行下载操作
		response.setContentType("application/javascript");
		if (cookies != null) {			
			PrintWriter writer = response.getWriter();
			for (Cookie cookie : cookies) {
				//builder.setLength(0);
				if(Contants.TICKET_KEY.equals(cookie.getName()) || Contants.SESSIONID.equals(cookie.getName())){
					// 结果类似于var ticket='wd3243fdt65gfert4';
					builder.append("var ")
						   .append(cookie.getName())
						   .append("=")
						   .append("'")
						   .append(cookie.getValue())
						   .append("'")
						   .append(";");
				}
				
			}
			writer.write(builder.toString());
		}else{
			builder.append("var ticket='';sessionId='';");
		}
	}
	
	/**
	 * 
		 *@author lisw
		 *@Description: 给cookies赋值，返回到页面的时候带过去
		 *@creatTime:2017年5月30日 下午6:57:43 
		 *@return:@param request
		 *@return:@param response
		 *@return:@return
		 *@return:@throws IOException Map<String,String>
		 *@modifier:
		 *@modifTime:
		 *@throws
	 */
	public Map<String,String> setCookies(HttpServletRequest request,HttpServletResponse response) throws IOException{
		Map<String,String> map=new HashMap<String, String>();
		String tokenKey="";
		String tokenValue="";
		CookiesUtil.setCookies(request, response, tokenKey, tokenValue);
		return map;
	}

}
