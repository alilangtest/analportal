package byit.tableausubscribe.common.util.mail;

import java.util.Date;
import java.util.Enumeration;
import java.util.Properties;
import java.util.Vector;

import javax.activation.DataHandler;
import javax.activation.FileDataSource;
import javax.mail.Authenticator;
import javax.mail.Message;
import javax.mail.Multipart;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;
import javax.mail.internet.MimeUtility;

/** 
 * <p> 
 * Title: 使用javamail发送邮件 
 * </p> 
 */  
public class MailUtils {  
  
    String to = "";// 收件人  
    String from = "";// 发件人  
    String host = "";// smtp主机  
    String port="";//端口
    String username = "";  
    String password = "";  
    String filename = "";// 附件文件名  
    String subject = "";// 邮件主题  
    String content = "";// 邮件正文  
    String address="";
    Boolean validate=true;// 验证
    
    Vector<String> file = new Vector<String>();// 附件文件集合  
  
    /** 
     * <br> 
     * 方法说明：默认构造器 <br> 
     * 输入参数： <br> 
     * 返回类型： 
     */  
    public MailUtils() {  
    }  
  
    /** 
     * <br> 
     * 方法说明：构造器，提供直接的参数传入 <br> 
     * 输入参数： <br> 
     * 返回类型： 
     */  
    public MailUtils(String to, String from, String smtpServer,  
            String username, String password, String subject, String content,Boolean validate,String port,String address) {  
        this.to = to;  
        this.from = from;  
        this.host = smtpServer;  
        this.username = username;  
        this.password = password;  
        this.subject = subject;  
        this.content = content;  
        this.validate=validate;
        this.port=port;
        this.address=address;
    }  
  
	public String getAddress() {
		return address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	public String getHost() {
		return host;
	}

	public String getPort() {
		return port;
	}

	public Boolean getValidate() {
		return validate;
	}

	public void setValidate(Boolean validate) {
		this.validate = validate;
	}

	public void setPort(String port) {
		this.port = port;
	}

	/** 
     * <br> 
     * 方法说明：设置邮件服务器地址 <br> 
     * 输入参数：String host 邮件服务器地址名称 <br> 
     * 返回类型： 
     */  
    public void setHost(String host) {  
        this.host = host;  
    }  
  
    /** 
     * <br> 
     * 方法说明：设置登录服务器校验密码 <br> 
     * 输入参数： <br> 
     * 返回类型： 
     */  
    public void setPassWord(String pwd) {  
        this.password = pwd;  
    }  
  
    /** 
     * <br> 
     * 方法说明：设置登录服务器校验用户 <br> 
     * 输入参数： <br> 
     * 返回类型： 
     */  
    public void setUserName(String usn) {  
        this.username = usn;  
    }  
  
    /** 
     * <br> 
     * 方法说明：设置邮件发送目的邮箱 <br> 
     * 输入参数： <br> 
     * 返回类型： 
     */  
    public void setTo(String to) {  
        this.to = to;  
    }  
  
    /** 
     * <br> 
     * 方法说明：设置邮件发送源邮箱 <br> 
     * 输入参数： <br> 
     * 返回类型： 
     */  
    public void setFrom(String from) {  
        this.from = from;  
    }  
  
    /** 
     * <br> 
     * 方法说明：设置邮件主题 <br> 
     * 输入参数： <br> 
     * 返回类型： 
     */  
    public void setSubject(String subject) {  
        this.subject = subject;  
    }  
  
    /** 
     * <br> 
     * 方法说明：设置邮件内容 <br> 
     * 输入参数： <br> 
     * 返回类型： 
     */  
    public void setContent(String content) {  
        this.content = content;  
    }  
  
    /** 
     * <br> 
     * 方法说明：把主题转换为中文 <br> 
     * 输入参数：String strText <br> 
     * 返回类型： 
     */  
    public String transferChinese(String strText) {  
        try {  
            strText = MimeUtility.encodeText(new String(strText.getBytes(),"UTF-8"), "UTF-8", "B");  //测试UTF-8
        } catch (Exception e) {  
            e.printStackTrace();  
        }  
        return strText;  
    }  
  
    /** 
     * <br> 
     * 方法说明：往附件组合中添加附件 <br> 
     * 输入参数： <br> 
     * 返回类型： 
     */  
    public void attachfile(String fname) {  
        file.addElement(fname);  
    }  
  
    /** 
     * <br> 
     * 方法说明：发送邮件 <br> 
     * 输入参数： <br> 
     * 返回类型：boolean 成功为true，反之为false 
     */  
    @SuppressWarnings("rawtypes")
	public boolean sendMail(String sendDetails,Vector<String> fileTemp,String reportName,MailUtils mailUtil) {  
    	boolean sendFlag=false;
        // 构造mail session  
       // Properties props = new Properties() ;  
        /*props.put("mail.smtp.host", host);  
        props.put("mail.smtp.auth", "true");  */
        MailSenderInfo mailInfo=new MailSenderInfo();
        Properties props = mailInfo.getMailProp(mailUtil);
        /*props.put("mail.smtp.host", mailUtil.getHost());  
        props.put("mail.smtp.auth", mailUtil.getValidate()); */ 
        Session session = Session.getDefaultInstance(props,  
                new Authenticator() {  
                    public PasswordAuthentication getPasswordAuthentication() {  
                        return new PasswordAuthentication(username, password);  
                    }  
                });  
  
        try {  
            // 构造MimeMessage 并设定基本的值  
            MimeMessage msg = new MimeMessage(session);  
            //MimeMessage msg = new MimeMessage();  
            msg.setFrom(new InternetAddress(from));  
           
              
            //msg.addRecipients(Message.RecipientType.TO, address); //这个只能是给一个人发送email  
            msg.setRecipients(Message.RecipientType.BCC, InternetAddress.parse(to)) ;  
            subject = transferChinese(subject);  
            msg.setSubject(subject);  
  
            // 构造Multipart  
            Multipart mp = new MimeMultipart("related");    
           
          //html
            //创建用于保存HTML正文的MimeBodyPart对象，并将它保存到MimeMultipart中  
            MimeBodyPart htmlPart = new MimeBodyPart();  
            // 创建一个MIME子类型为"alternative"的MimeMultipart对象，并作为前面创建的htmlPart对象的邮件内容    
            MimeMultipart htmlMultipart = new MimeMultipart("alternative");  
            MimeBodyPart htmlbodypart = new MimeBodyPart();
            StringBuffer contents=new StringBuffer();
            String fileimg = "";
            //正文
            if (fileTemp != null) {
            	int num=0;
            	for (Enumeration<String> fileList = fileTemp.elements(); fileList.hasMoreElements();) {
            		num++;
            		contents.append("<img src='cid:img-"+num+"'/><br/>");
            	      //图片
                    MimeBodyPart jpgPart = new MimeBodyPart(); 
            		fileimg = fileList.nextElement();
            		 FileDataSource imgfds = new FileDataSource(fileimg); 
            		 
                     jpgPart.setDataHandler(new DataHandler(imgfds)); 
                     jpgPart.setContentID("img-"+num); 
                     mp.addBodyPart(jpgPart);
            	}
            //htmlbodypart.setContent("<img src='cid:123456'><br>", "text/html;charset=UTF-8");
            htmlbodypart.setContent(contents.toString(), "text/html;charset=UTF-8");
            htmlMultipart.addBodyPart(htmlbodypart);
            htmlPart.setContent(htmlMultipart);
            mp.addBodyPart(htmlPart);
            }
            
            
            //mbpContent.setContent(mp);
            
            // 向Multipart添加附件  
            Enumeration efile = file.elements();  
            //拆分reportName
            String[] rn = reportName.split(",");
           
            int i=1;
            	while (efile.hasMoreElements()) {            		  
                    MimeBodyPart mbpFile = new MimeBodyPart();  
                    filename = efile.nextElement().toString();  
                    FileDataSource fds = new FileDataSource(filename);  
                    mbpFile.setDataHandler(new DataHandler(fds));  
                    //这个方法可以解决附件乱码问题。   
                   // String subFileName = filename.substring(filename.lastIndexOf("\\")+1,filename.length());
                   // mbpFile.setFileName(transferChinese(rn[i]+".png"));  
                    mbpFile.setFileName(rn[i]+".png");  
                    mp.addBodyPart(mbpFile);  
                    i++;
      
                }  

            file.removeAllElements();  
    if("1".equals(sendDetails)){
    	//发送附件
      msg.setContent(mp);  
      MimeBodyPart mbpContent = new MimeBodyPart();  
      mbpContent.setContent(content, "text/html;charset=UTF-8");  
      mp.addBodyPart(mbpContent);
    }
   
         // 向Multipart添加MimeMessage  
          
            msg.setContent(mp);  
            
            msg.setSentDate(new Date());  
            msg.saveChanges() ;  
            // 发送邮件  
              
            Transport transport = session.getTransport("smtp");  
            transport.connect(host, username, password);  
            transport.sendMessage(msg, msg.getAllRecipients());  
            transport.close();  
            sendFlag=true;
        } catch (Exception mex) {  
            mex.printStackTrace();  
        }  
        return sendFlag;  
    }  
    
    
    
    /** 
     * <br> 
     * 方法说明：发送邮件 <br> 
     * 输入参数： <br> 
     * 返回类型：boolean 成功为true，反之为false 
     */  
    @SuppressWarnings("rawtypes")
	//public String sendExcel() {  
    //public String sendExcel(MailUtils mailUtil) {
    public boolean sendExcel(MailUtils mailUtil) {
        // 构造mail session  
        /*Properties props = new Properties() ;  
        props.put("mail.smtp.host", host);  
        props.put("mail.smtp.auth", "true");  */
    	
    	 MailSenderInfo mailInfo=new MailSenderInfo();
         Properties props = mailInfo.getMailProp(mailUtil);
    	
        Session session = Session.getDefaultInstance(props,  
                new Authenticator() {  
                    public PasswordAuthentication getPasswordAuthentication() {  
                        return new PasswordAuthentication(username, password);  
                    }  
                });  
  
        try {  
            // 构造MimeMessage 并设定基本的值  
            MimeMessage msg = new MimeMessage(session);  
            //MimeMessage msg = new MimeMessage();  
            msg.setFrom(new InternetAddress(from));  
           
              
            msg.setRecipients(Message.RecipientType.BCC, InternetAddress.parse(to)) ;  
            subject = transferChinese(subject);  
            msg.setSubject(subject);  
  
            // 构造Multipart  
            Multipart mp = new MimeMultipart("related");    
            // 向Multipart添加正文  
          MimeBodyPart mbpContent = new MimeBodyPart();  
            mbpContent.setContent(content, "text/html;charset=UTF-8");  
              
            // 向MimeMessage添加（Multipart代表正文）  
            mp.addBodyPart(mbpContent);             
           
            // 向Multipart添加附件  
            Enumeration efile = file.elements();  
            while (efile.hasMoreElements()) {  
  
                MimeBodyPart mbpFile = new MimeBodyPart();  
                filename = efile.nextElement().toString();  
                FileDataSource fds = new FileDataSource(filename);  
                mbpFile.setDataHandler(new DataHandler(fds));  
                //这个方法可以解决附件乱码问题。   
                String subFileName = filename.substring(filename.lastIndexOf("\\")+1,filename.length());
                mbpFile.setFileName(transferChinese(subFileName));  
                // 向MimeMessage添加（Multipart代表附件）  
                mp.addBodyPart(mbpFile);  
  
            }  
  
            file.removeAllElements();  
            
            
            
            
            // 向Multipart添加MimeMessage  
            msg.setContent(mp);  
            msg.setSentDate(new Date());  
            msg.saveChanges() ;  
            // 发送邮件  
              
            Transport transport = session.getTransport("smtp");  
            transport.connect(host, username, password);  
            transport.sendMessage(msg, msg.getAllRecipients());  
            transport.close();  
        } catch (Exception mex) {  
            mex.printStackTrace();  
            return false;  
        }  
        return true;  
    }  
  
    
    /** 
     * <br> 
     * 方法说明：主方法，用于测试 <br> 
     * 输入参数： <br> 
     * 返回类型： 
     */  
//    public static void main(String[] args) {  
//        MailUtils sendmail = new MailUtils();  
//        
//        Vector<String> fileNameStrings = new Vector<String>();
//        //fileNameStrings.set(0, "D:\\BJ_study\\信用卡相关资料\\盘查.xlsx");
//        fileNameStrings.addElement("D:\\mms\\workspace\\tableauSubscribe\\WebContent\\WEB-INF\\tempFile\\give.png");
//        fileNameStrings.addElement("D:\\mms\\workspace\\tableauSubscribe\\WebContent\\WEB-INF\\tempFile\\pt.png");
//       // fileNameStrings.set(1, "D:\\BJ_study\\信用卡相关资料\\信用卡表结构文档.xlsx");
//       // fileNameStrings.set(2,"D:\\BJ_study\\信用卡相关资料\\est测试20161118.xlsx");
//        
//        sendmail.setHost("mail.hfbank.com.cn");  
//        sendmail.setUserName("yidongjinrongbu@hfbank.com.cn");  
//        sendmail.setPassWord("yidong2016");  
//        sendmail.setTo("wangchunquanwcq@hfbank.com.cn");  
//        
//        
//        
//     // 创建邮件发送者地址
//     		//Address from = new InternetAddress("yidongjinrongbu@hfbank.com.cn");
//     		// 设置邮件消息的发送者
//     		 String nick="";  
//     	        try {  
//     	            nick=javax.mail.internet.MimeUtility.encodeText("移动金融部");  
//     	        } catch (UnsupportedEncodingException e) {  
//     	            e.printStackTrace();  
//     	        }   
//     	       //sendmail.setFrom(new InternetAddress(nick+" <"+from+">")); 
//     	       //sendmail.setFrom(nick+" <\"yidongjinrongbu@hfbank.com.cn\">"); 
//     	       sendmail.setFrom(nick+" <"+MailConstants.MAILADDRESS+">"); 
//        
//        
//        
//     //   sendmail.setFrom("yidongjinrongbu@hfbank.com.cn");  
//        sendmail.setSubject("你好，这是测试！发送内容");  
//       // sendmail.setContent("你好这是一个发送附件的测试！");  
//       
//        // Mail sendmail = new  
//        // Mail("dujiang@sricnet.com","du_jiang@sohu.com","smtp.sohu.com","du_jiang","31415926","你好","胃，你好吗？");  
//       // sendmail.attachfile("D:\\BJ_study\\信用卡相关资料\\盘查.xlsx");  
//       // sendmail.attachfile("D:\\BJ_study\\信用卡相关资料\\信用卡表结构文档.xlsx");    
////        for(String file:fileNameStrings)  {
////     	   sendmail.attachfile(file);  
////	    }
////        sendmail.setContent("你好这是一个发送附件的测试！"); 
////        fileNameStrings = null;
//        String rs=",1个人版,2小金贯";
//        String sd="2";
//        System.out.println(sendmail.sendMail(sd,fileNameStrings,rs));  
//  
//    }
}  
